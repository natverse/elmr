% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unspike.R
\name{unspike}
\alias{unspike}
\alias{unspike.neuron}
\alias{unspike.neuronlist}
\title{Remove artefactual spikes in neuron tracing due to registration errors}
\usage{
unspike(x, threshold, ...)

\method{unspike}{neuron}(x, threshold, ...)

\method{unspike}{neuronlist}(x, threshold, ...)
}
\arguments{
\item{x}{A neuron, or neuronlist}

\item{threshold}{A numeric threshold for an XY distance that would be
considered suspicious.}

\item{...}{arguments passed to methods}
}
\value{
A neuron or neuronlist with artefactual spikes removed. Segments that
  cannot currently be fixed are left untouched with a warning issued.
}
\description{
Remove artefactual spikes in neuron tracing due to registration errors
}
\details{
\code{unspike} currently uses a very simple algorithm to remove big
  jumps: it just looks for XY jumps bigger than a specified distance and
  removes the first associated node. It currently cannot deal with two
  slightly more difficult situations: \itemize{

  \item When there are two or more points that are far out of register.

  \item When there a branch or end points that are out of register.

  }

  Handling consecutive points or end points should be a fairly
  straightforward addition. Branch points require a little more thought.
}
\section{node ids and connectors}{
 unspike has the side effect of losing the
  CATMAID node ids in the output neuron. connector/tag information is
  retained although the node ids are translated to the new numbering system.
}

\examples{
\donttest{

da1pns=read.neurons.catmaid("annotation:^glomerulus DA1$", conn=vfbcatmaid("fafb"))
# set threshold to 5000 nm
da1pns.fix=unspike(da1pns, threshold=5000)
plot(da1pns, col='red', WithNodes=FALSE)
# overplot fixed neuron leaving red spikes visible
plot(da1pns.fix, col='black', WithNodes=FALSE, add=TRUE)
}
}
\seealso{
\code{\link[nat]{smooth_neuron}}
}
